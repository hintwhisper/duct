{
  "name": "mongoose-concrete-timestamps",
  "version": "0.1.0",
  "author": {
    "name": "Austin Pocus",
    "email": "ajpocus@gmail.com"
  },
  "description": "Save concrete, non-virtual timestamps to your Mongoose models.",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ajpocus/mongoose-concrete-timestamps.git"
  },
  "keywords": [
    "mongoose",
    "timestamps"
  ],
  "dependencies": {
    "mongoose": "3.x",
    "underscore": "latest"
  },
  "devDependencies": {
    "mocha": "1.x",
    "should": "1.x"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10"
  },
  "readme": "# mongoose-concrete-timestamps\nSaves visible, non-virtual timestamps to Mongoose models. Intended as a replacement for mongoose-timestamp.\n\n## Intro\n\nYou can install mongoose-concrete-timestamps with npm:\n\n    npm install mongoose-concrete-timestamps\n    \nThis module serves a simple purpose: write a createdAt timestamp on the first save(), and update the updatedAt timestamp on each save().\n\n## Usage\n\nUsing this module is super-simple. Just require the module:\n\n    var timestamps = require('mongoose-concrete-timestamps');\n    \nAnd plug it into your schema:\n\n    var userSchema = new mongoose.Schema({ name: String });\n    userSchema.plugin(timestamps);\n    var User = mongoose.model('User', userSchema);\n    \n    var user = new User({ name: \"Foo\" });\n    user.save(function (err, user) {\n      // user.createdAt will be set to Date.now, at the time of the save() call.\n      // The same goes for user.updatedAt, except it's updated on each save().\n    });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ajpocus/mongoose-concrete-timestamps/issues"
  },
  "_id": "mongoose-concrete-timestamps@0.1.0",
  "_from": "mongoose-concrete-timestamps@"
}
