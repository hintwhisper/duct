{
  "name": "mongoose-cursor",
  "version": "0.0.4",
  "description": "mongoose-cursor",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/javiermanzano/mongoose-cursor.git"
  },
  "dependencies": {
    "mongoose": ">=2.7.0"
  },
  "keywords": [
    "mongoose",
    "paginate",
    "pagination",
    "cursor",
    "sort",
    "page",
    "limit"
  ],
  "author": {
    "name": "Javier Manzano",
    "email": "javier.manzano22@gmail.com",
    "url": "http://www.jmanzano.es"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "readme": "mongoose-cursor\n===============\n\nBased on https://github.com/edwardhotchkiss/mongoose-paginate\n\nAn example extracted from Parkuik (www.parkuik.com) source code:\n\n```javascript\nexports.parkingsPagination = function(req, res) {\n  var page = req.query.page;\n\tvar Parking = mongoose.model('Parking');\n\tParking\n\t\t.find()\n\t\t.paginate(page, 10, function(err, results, total) {\n\t\t\tres.json(total);\n\t\t\treturn;\n\t\t})\n}\n```\n\nThe structure for the response (for example, if you want to use res.json()):\n\n```json\n{\n\tdata: [\n\t\t...\n\t],\n\tnext: 1\n}\n",
  "bugs": {
    "url": "https://github.com/javiermanzano/mongoose-cursor/issues"
  },
  "_id": "mongoose-cursor@0.0.4",
  "dist": {
    "shasum": "4717f0dbe4e28f9d73dd3745e21bda12bacac2ba"
  },
  "_from": "mongoose-cursor@",
  "_resolved": "https://registry.npmjs.org/mongoose-cursor/-/mongoose-cursor-0.0.4.tgz"
}
